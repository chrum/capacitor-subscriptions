{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAwB,MAAM,iBAAiB,CAAC;AAWlE,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAA/C;;QACY,cAAS,GAAyD,EAAE,CAAC;IAiFjF,CAAC;IA/ES,mBAAmB,CAAC,SAAiB,EAAE,YAAqC;QAClF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YAAE,OAAO;QAEvC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC9D,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,OAAsC;QAC5D,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAC1C,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,OAA0F;QAC9G,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACxC,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,OAA0B;QACrD,OAAO,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;YACxC,IAAI,EAAE,EAAE;SACT,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,OAAsC;QAC/D,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;QAC7C,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,OAAoC;QAChE,OAAO,CAAC;QACR,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,eAAe,EAAE,uBAAuB;SACzC,CAAA;IACH,CAAC;IAED,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACrC,CAAC;IAED,4BAA4B,CAAC,OAA4D;QACvF,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,WAAW,CAAC,SAAsC,EAAE,YAAyD;QAC3G,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC9B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SAChC;QACD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7C,MAAM,MAAM,GAAyB;YACnC,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;gBAClD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;YAC3B,CAAC;SACF,CAAC;QAEF,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;CACF","sourcesContent":["import { WebPlugin, PluginListenerHandle } from \"@capacitor/core\";\nimport type {\n  SubscriptionsPlugin,\n  ProductDetailsResponse,\n  PurchaseProductResponse,\n  CurrentEntitlementsResponse,\n  LatestTransactionResponse,\n  AndroidPurchasedTrigger,\n  RefundLatestTransactionResponse\n} from './definitions';\n\nexport class SubscriptionsWeb extends WebPlugin implements SubscriptionsPlugin {\n  protected listeners: { [eventName: string]: ((response: any) => void)[] } = {};\n\n  private removeEventListener(eventName: string, listenerFunc: (response: any) => void): void {\n    if (!this.listeners[eventName]) return;\n\n    const index = this.listeners[eventName].indexOf(listenerFunc);\n    if (index > -1) {\n      this.listeners[eventName].splice(index, 1);\n    }\n  }\n\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n  async getProductDetails(options: { productIdentifier: string }): Promise<ProductDetailsResponse> {\n    console.log('getProductDetails', options);\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    };\n  }\n\n  async purchaseProduct(options: { productIdentifier: string, accountId?: string, acknowledgePurchases?: boolean }): Promise< PurchaseProductResponse > {\n    console.log('purchaseProduct', options);\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    };\n  }\n\n  async getCurrentEntitlements(options: { sync: boolean }): Promise< CurrentEntitlementsResponse > {\n    options;\n    console.log('getCurrentEntitlements');\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n      data: []\n    };\n  }\n\n  async getLatestTransaction(options: { productIdentifier: string }): Promise<LatestTransactionResponse> {\n    console.log('getLatestTransaction', options);\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    };\n  }\n\n  async refundLatestTransaction(options: {productIdentifier: string}): Promise< RefundLatestTransactionResponse > {\n    options;\n    return {\n      responseCode: -1,\n      responseMessage: 'Incompatible with web',\n    }\n  }\n\n  manageSubscriptions(): void {\n    console.log('manageSubscriptions');\n  }\n\n  setGoogleVerificationDetails(options: { googleVerifyEndpoint: string, productId: string }): void {\n    console.log('setGoogleVerificationDetails', options);\n  }\n\n  addListener(eventName: 'ANDROID-PURCHASE-RESPONSE', listenerFunc: (response: AndroidPurchasedTrigger) => void): Promise<PluginListenerHandle> {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n    this.listeners[eventName].push(listenerFunc);\n\n    const handle: PluginListenerHandle = {\n      remove: () => {\n        this.removeEventListener(eventName, listenerFunc);\n        return Promise.resolve();\n      }\n    };\n\n    return Promise.resolve(handle);\n  }\n}"]}